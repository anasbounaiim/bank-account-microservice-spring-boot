type Query {
    accountsList : [BankAccount] ,
    customerList : [Customer] ,
    bankAccountById (id:String) : BankAccount
    customerById (id :Float) :Customer
}
type Mutation {
    addAccount(bankAccount : BankAccountDTO) : BankAccount ,
    updateAccount (id: String, bankAccount : BankAccountDTO) : BankAccount ,
    deleteAccount(id : String) : Boolean ,

    deleteCustomer(id : Float) : Boolean
}

type Customer {
    id : ID,
    name: String
    bankAccounts : [BankAccount]
}
type BankAccount {
    id : String,
    createdAt : Float,
    balance : Float,
    currency : String,
    type : String ,
    customer : Customer
}
input BankAccountDTO {
    balance : Float,
    currency : String,
    type : String
}